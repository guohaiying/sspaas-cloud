<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
		  http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">
    <!-- 设置项目图标 -->
    <!--<icon>
        <small-icon>/static/cloudDesign/images/icon/small-icon.jpg</small-icon>&lt;!&ndash; 小图标(16*16) &ndash;&gt;
        <large-icon>/static/cloudDesign/images/icon/large-icon.png</large-icon>&lt;!&ndash; 大图标(32*32) &ndash;&gt;
    </icon>-->
    <!-- 设置项目名称 -->
    <display-name>sspaas-cloud</display-name>
    <!-- 设置项目描述 -->
    <description>
    </description>
    <!-- ———————————————— 用户属性设置(session、cookie) ———————————————— -->
    <!--<session-config>
        <session-timeout>30</session-timeout>&lt;!&ndash; 设置session有效时间(单位:分钟) &ndash;&gt;
        &lt;!&ndash; cookie设置 &ndash;&gt;
        <cookie-config>
            <http-only>true</http-only>&lt;!&ndash; 设置js不能获取cookie &ndash;&gt;
        </cookie-config>
    </session-config>-->
    <!-- ———————————————— 错误处理 ———————————————— -->
    <!-- 404页面丢失 -->
    <!-- <error-page>
        <error-code>404</error-code>
        <location>/error/error_404.jsp</location>
    </error-page> -->
    <!-- 500程序错误 -->
    <!--   <error-page>
           <error-code>500</error-code>
           <location>/error/error_500.jsp</location>
       </error-page>-->
    <!-- ———————————————— 默认首页 ———————————————— -->
    <!-- <welcome-file-list>
        <welcome-file></welcome-file>
    </welcome-file-list> -->
    <!-- ———————————————— shiro权限框架 ———————————————— -->
    <!--    <filter>
            <filter-name>shiroFilter</filter-name>
            <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
            <async-supported>true</async-supported>
            <init-param>
                <param-name>targetFilterLifecycle</param-name>
                <param-value>true</param-value>
            </init-param>
        </filter>
        <filter-mapping>
            <filter-name>shiroFilter</filter-name>
            <url-pattern>/*</url-pattern>
        </filter-mapping>-->
    <!-- ———————————————— 加载spring容器 ———————————————— -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring-context.xml</param-value>
    </context-param>
    <!-- ————————————————监听spring容器———————————————— -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!-- 加载这个request、session和global session级作用域 -->
    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>
    <!-- ————————————————字符编码配置———————————————— -->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- ————————————————防止Spring内存溢出监听器———————————————— -->
    <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>
    <!-- ————————————————Spring MVC servlet———————————————— -->
    <servlet>
        <servlet-name>SpringMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
        <async-supported>true</async-supported>
    </servlet>
    <servlet-mapping>
        <servlet-name>SpringMVC</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    <!-- 为了使用SpringMVC框架实现REST，需配置 HiddenHttpMethodFilter -->
    <filter>
        <filter-name>hiddenHttpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>hiddenHttpMethodFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- ————————————————log4j日志配置———————————————— -->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:log4j.properties</param-value>
    </context-param>
    <context-param>
        <param-name>log4jRefreshInterval</param-name>
        <param-value>6000</param-value>
    </context-param>
    <context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>sspaas-cloud.root</param-value>
	  </context-param>
    <listener>
        <listener-class>
            org.springframework.web.util.Log4jConfigListener
        </listener-class>
    </listener>
    <!-- ————————————————配置druid 连接池监控———————————————— -->
    <filter>
        <filter-name>DruidWebStatFilter</filter-name>
        <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
        <init-param>
            <param-name>exclusions</param-name>
            <param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>DruidWebStatFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <servlet>
        <servlet-name>DruidStatView</servlet-name>
        <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>DruidStatView</servlet-name>
        <url-pattern>/druid/*</url-pattern>
    </servlet-mapping>
    <!-- ———————————————— cors跨域请求支持 ———————————————— -->
    <filter>
        <filter-name>CORS</filter-name>
        <filter-class>com.thetransactioncompany.cors.CORSFilter</filter-class>
        <init-param>
            <param-name>cors.allowOrigin</param-name>
            <param-value>*</param-value>
        </init-param>
        <init-param>
            <param-name>cors.supportedMethods</param-name>
            <param-value>GET, POST, HEAD, PUT, DELETE</param-value>
        </init-param>
        <init-param>
            <param-name>cors.supportedHeaders</param-name>
            <param-value>Accept, Origin, X-Requested-With, Content-Type, Last-Modified</param-value>
        </init-param>
        <init-param>
            <param-name>cors.exposedHeaders</param-name>
            <param-value>Set-Cookie</param-value>
        </init-param>
        <init-param>
            <param-name>cors.supportsCredentials</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CORS</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
</web-app>
